@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using StartSch.Data
@inherits LayoutComponentBase
@layout MainLayout
@attribute [Authorize]
@inject Db Db

<HeadContent>
    <link rel="stylesheet" href="admin.css">
</HeadContent>
<PageTitle>Adminisztr치ci칩 | StartSCH</PageTitle>

<h1>Adminisztr치ci칩</h1>

<div class="admin-pages-container">
    <nav>
        @if (_pincerGroups != null)
        {
            @foreach (var group in _pincerGroups)
            {
                <NavLink href="@($"/admin/pincer/{group.Id}/new-post")" Match="@NavLinkMatch.All">
                <span>
                    @group.PincerName
                </span>
                </NavLink>
            }
        }
    </nav>
    <main>
        @Body
    </main>
</div>

@code {

    [CascadingParameter] private Task<AuthenticationState> AuthState { get; set; } = null!;
    private ClaimsPrincipal? _user;
    private List<Group>? _pincerGroups;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        _user = authState.User;
        var memberships = _user.GetGroupMemberships()?
            .Where(g => g.Titles.Any(t => t.RoughlyMatches("korvez") || t.RoughlyMatches("admin") || t.Contains("PR")))
            .Select(g => g.PekId)
            .ToList();
        if (memberships == null)
            return;
        _pincerGroups = await Db.Groups
            .Where(g => memberships.Contains(g.PekId!.Value))
            .AsNoTracking()
            .ToListAsync();
    }

}