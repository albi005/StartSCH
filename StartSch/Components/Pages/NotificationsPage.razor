@page "/notifications"
@inject IEnumerable<IModule> Modules
@inject NavigationManager NavigationManager

<PageTitle>Értesítések</PageTitle>
<h1>Értesítések</h1>

<AuthorizeView>
    <NotAuthorized>
        A beállítások módosítása előtt jelentkezz be:
        <div style="margin: 16px 16px 32px;">
            <LogInAndReturnButton/>
        </div>
    </NotAuthorized>
</AuthorizeView>

<div style="display: flex; gap: 48px">
    @*https://github.com/dotnet/aspnetcore/issues/53129*@
    <EditForm Enhance Model="Model" FormName="SaveNotificationPreferences" OnValidSubmit="@Save">
        <AuthorizeView Context="nothin">
            <FilledButton>Mentés</FilledButton>
        </AuthorizeView>
        <TagsSelector
            AvailableTags="@(Modules.SelectMany(m => m.Tags).ToList())"
            FormParameterName="Model.Tags"/>
    </EditForm>

    <div>
        <b>Server</b>
        @if (Model?.Tags != null)
        {
            @foreach (var tag in Model.Tags.Split(','))
            {
                <p>@tag</p>
            }
        }
    </div>
</div>

@code {

    [SupplyParameterFromForm] private NotificationPreferences? Model { get; set; }
    private NotificationPreferences? _savedPreferences;

    [CascadingParameter] private Task<AuthenticationState>? AuthenticationState { get; set; }

    protected override void OnInitialized() => Model ??= new();

    public class NotificationPreferences
    {
        public string? Tags { get; set; }
        public string? Email { get; set; }
    }

    private async Task Save()
    {
        if (AuthenticationState == null)
            return;
        var auth = await AuthenticationState;
        _savedPreferences = Model;
    }

}