@page "/"
@using Microsoft.EntityFrameworkCore
@using StartSch.Data
@inject Db Db

<PageTitle>StartSCH</PageTitle>

@{
    DateTime utcNow = DateTime.UtcNow;
}

<aside style="float: right; max-width: min(400px, 25%)">
    <h2>Nyitások</h2>
    @foreach (var opening in _openings)
    {
        <article style="margin-bottom: 32px">
            <h3 style="margin: 0 0 12px 0">
                @opening.Event.Title
            </h3>
            <div style="margin-bottom: 12px">
                @foreach (var group in opening.Event.Groups)
                {
                    <span class="tag">
                        @group.PincerName
                    </span>
                }
            </div>

            @if (opening.Event.StartUtc < utcNow)
            {
                <span style="font-weight: bold; color: var(--md-sys-color-tertiary)">
                    @Utils.FormatDateRange(opening.Event.StartUtc, opening.Event.EndUtc)
                </span>
            }
            else
            {
                @Utils.FormatDateRange(opening.Event.StartUtc, opening.Event.EndUtc)
            }
        </article>
    }

    <a href="/openings">Korábbi nyitások</a>
</aside>

<main>
    @foreach (var post in _posts)
    {
        <article>
            <h2>@post.Title</h2>
            <div class="tags">
                @foreach (var tag in post.Tags)
                {
                    <div>@tag</div>
                }
            </div>
            <p>
                @post.Excerpt
            </p>
        </article>
    }
    <div style="height: 64px"></div>
    <LogInOrOut/>
    <UserClaims/>
</main>

@code {
    private IEnumerable<Opening> _openings = [];
    private IEnumerable<Post> _posts = [];

    protected override async Task OnInitializedAsync()
    {
        _openings = await Db.Openings
            .Where(o => o.Event.EndUtc == null)
            .OrderBy(o => o.Event.StartUtc)
            .Include(o => o.Event.Groups)
            .AsNoTrackingWithIdentityResolution()
            .ToListAsync();
        _posts = await Db.Posts
            .OrderByDescending(p => p.PublishedUtc)
            .Include(p => p.Tags)
            .AsNoTrackingWithIdentityResolution()
            .ToListAsync();
    }

}