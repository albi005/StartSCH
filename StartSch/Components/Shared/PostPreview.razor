@{
    bool isDraft = Post.PublishedUtc == null && !IsEditing;
    DateTime utcNow = DateTime.UtcNow;
}

<article class="post-preview @(isDraft ? "draft" : null)">
    <h3 style="margin-bottom: 4px">
        <a href="@($"/posts/{Post.Id}")">
            @Post.Title
        </a>

        @if (Post.Id != 0)
        {
            <AuthorizeView Policy="Write" Resource="@Post">
                <a href="/posts/@Post.Id/edit" style="margin-left: 4px">
                    <icon>edit</icon>
                </a>
            </AuthorizeView>
        }
    </h3>
    <div style="display: flex; align-items: center; gap: 4px; margin-bottom: 4px">
        @foreach (var group in Post.Groups)
        {
            if (group.Id == KnownGroupId) continue;
            <GroupChip Group="@group"/>
        }

        <span class="icon-label">
            <icon>chat</icon>

            @if (isDraft)
            {
                <span style="color: var(--md-sys-color-error); font-weight: bold">
                    VÃ¡zlat
                </span>
            }
            else
            {
                <DateDisplay DateUtc="@Post.PublishedUtc"/>
            }
        </span>
    </div>
    @if (Post.Event != null && !EventKnown)
    {
        <a href="/events/@Post.Event.Id"
           class="icon-label"
           style="margin-bottom: 4px">
            <icon>event</icon>
            @if ((Post.Event.EndUtc ?? Post.Event.StartUtc.AddHours(4)) > utcNow)
            {
                <span style="margin-right: .5em">
                    <DateDisplay DateUtc="@Post.Event.StartUtc"/>:
                </span>
            }
            <span style="max-width: 300px; text-wrap: nowrap; overflow: clip; text-overflow: ellipsis;">
                @Post.Event.Title
            </span>
        </a>
    }
    <div class="content">
        @((MarkupString)_content.HtmlExcerpt)
    </div>
</article>

@code {
    private TextContent _content = null!;

    [Parameter, EditorRequired] public required Post Post { get; set; }
    [Parameter] public bool IsEditing { get; set; }
    [Parameter] public bool EventKnown { get; set; }
    [Parameter] public int? KnownGroupId { get; set; }

    protected override void OnParametersSet()
    {
        _content = new(Post.ContentMarkdown ?? "", Post.ExcerptMarkdown);
    }

}
