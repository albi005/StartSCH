<article class="event-preview">
    <h3 style="margin-bottom: 4px">
        <a href="@($"/events/{Event.Id}")">
            @Event.Title
        </a>

        @if (Event.Id != 0 && !HideAdminControls)
        {
            <AuthorizeView Policy="Write" Resource="@Event">
                <a title="Esemény szerkesztése" href="/events/@Event.Id/edit">
                    <icon>edit</icon>
                </a>
                <a title="Új alesemény"
                   href="/events/0/edit?groups=@(string.Join(',', Event.Groups.Select(g => g.Id)))&parent=@Event.Id">
                    <icon>calendar_add_on</icon>
                </a>
                <a title="Új poszt"
                   href="/posts/0/edit?groups=@(string.Join(',', Event.Groups.Select(g => g.Id)))&event=@Event.Id">
                    <icon>chat_add_on</icon>
                </a>
            </AuthorizeView>
        }
    </h3>
    <div style="display: flex; align-items: center; gap: 4px; margin-bottom: 4px">
        @foreach (var group in Event.Groups)
        {
            if (group.Id == KnownGroupId) continue;
            <GroupChip Group="@group"/>
        }

        <icon style="color: var(--md-sys-color-on-surface-variant)">event</icon>

        <span style="color: var(--md-sys-color-on-surface-variant); margin-left: 2px">
               <DateDisplay DateUtc="@Event.StartUtc"/>
          </span>
    </div>
    @if (Event.Parent != null && !ParentKnown)
    {
        <a href="/events/@Event.Parent.Id"
           style="color: var(--md-sys-color-on-surface-variant);
                  display: flex; gap: 4px; align-items: center; width: fit-content;
                  margin-bottom: 4px">
            <icon>event</icon>
            @if ((Event.Parent.EndUtc ?? Event.Parent.StartUtc.AddHours(4)) > DateTime.UtcNow)
            {
                <span>
                    <DateDisplay DateUtc="@Event.Parent.StartUtc"/>:
                </span>
            }
            <span style="max-width: 320px; text-wrap: nowrap; overflow: clip; text-overflow: ellipsis;">
                @Event.Parent.Title
            </span>
        </a>
    }
    <div class="content">
        @((MarkupString)_content.HtmlExcerpt)
    </div>
</article>

@code {
    [Parameter, EditorRequired] public required Event Event { get; set; }
    private TextContent _content = null!;

    [Parameter] public bool HideAdminControls { get; set; }
    [Parameter] public bool ParentKnown { get; set; }
    [Parameter] public int? KnownGroupId { get; set; }

    protected override void OnParametersSet()
    {
        _content = new(Event.DescriptionMarkdown ?? "", null);
    }

}
